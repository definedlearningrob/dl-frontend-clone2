/* eslint-disable max-len, camelcase */
export default {
  chooseAccount: {
    contactUs: 'Learn More',
    help: 'Get Help',
    loginHelp:
      'Engaging standards-aligned K-12 PBL solution that provides high-quality cross-curricular performance tasks. Hands-on projects are based on real-world situations and allow students to apply their learning.',
    new: 'New User / Access Code',
    newInfo: 'Register or enter access code.',
    student: 'Student',
    studentInfo: 'Please ask your teacher for login instructions.',
    title: 'Choose Login Type',
    trouble: 'Having trouble?',
    user: 'Educator',
    userInfo: 'Teachers / Counselors / Administrators enter here.',
    welcome: 'Welcome to Defined Learning',
    visit:
      'Visit <a href="https://www.definedlearning.com/" class="signin-banner__hint__nested-link"><u>Defined</u></a> to find how Learning can transform your classrooms',
  },
  sidebar: {
    collapseText: 'Collapse',
    expandText: 'Expand',
  },
  common: {
    fields: {
      common: {
        all: 'All',
        archivedAt: 'Archived at',
        description: 'Description',
        displayName: 'Display name',
        entity: 'Entity',
        name: 'Name',
        page: 'page',
        placeholder: 'Type here...',
        resources: 'Resources',
        schoolClass: 'School class',
        status: 'Status',
        student: 'Student',
        users: 'Users',
      },
      entity: {
        entities: 'Entities',
      },
    },
    placeholders: {
      search: 'Search...',
      searchBy: 'Search by {{field}}...',
      select: 'Select...',
      searchFor: 'Search for {{field}}...',
    },
    roles: {
      admin: 'Admin',
      entityAdmin: 'Entity Admin',
      salesAdmin: 'Sales Admin',
      student: 'Student',
      teacher: 'Teacher',
    },
  },
  copyright: '{{year}} Â© Copyright Defined Learning, LLC. All Rights Reserved.',
  navigation: {
    back: 'Back',
    notFound: 'Page not found',
  },
  dashboard: {
    reportArea: {
      title: 'Report Area',
      noDataTitle: 'Report Area is empty',
      noDataDescription: 'There is no data yet.',
    },
  },
  courseDetails: {
    abilities: 'Abilities',
    alsoCalled: 'Also called:',
    backToProject: 'Back to project',
    education: 'Education',
    emptyArea: '{{area}} Area is empty',
    emptyDetails: 'Details are empty',
    emptyExploreMore: 'Explore more is empty',
    experienceInDefinedCareers: 'Experience in Defined Careers',
    exploreMore: 'Explore more',
    exploreMoreIntroduction:
      'The following careers closely align with this project. Interested students are encouraged to explore and experience these careers on the Defined Careers platform.',
    jobOutlook: 'Job outlook',
    knowledge: 'Knowledge',
    medianSalary: 'Median salary:',
    noDataInSection: 'There is no data in this section.',
    noExternalLinks: 'There is no external links in this section.',
    noInformationAboutCourse: 'There is no information about course.',
    notFound: 'Course not found',
    onTheJobYouWould: 'On the job, you would:',
    personality: 'Personality',
    personalityListTitle: 'They do well at jobs that need:',
    salaryAnnual: '{{salary, currency(USD)}} annual',
    skills: 'Skills',
    technology: 'Technology',
    technologyIntroduction: 'You might use software like this on the job:',
  },
  project: {
    check_ins: 'Check-ins',
    checkIns: {
      libraryCard: {
        goToLibrary: 'Go to library',
        heading: 'Check-in questions base',
        paragraph: 'Go to your check-in questions library and manage them.',
      },
      createNewCheckInQuestion: {
        addCheckIn: 'Add check-in',
        heading: 'Create check-in question',
        paragraph: 'You will create new check-in question and assign it to the project.',
        createNew: 'Create new',
        error: 'There was an error while creating the check-in question',
        fromLibrary: 'From Library',
        success: 'Check-in question created successfully',
      },
      deleteCheckInGroup: {
        error: 'There was an error while deleting the check-in group',
        success: 'Check-in group deleted successfully',
      },
      deleteCheckInQuestion: {
        error: 'There was an error while deleting the check-in question',
        success: 'Check-in question deleted successfully',
      },
      updateCheckInQuestion: {
        error: 'There was an error while updating the check-in question',
        success: 'Check-in question updated successfully',
      },
      checkInGroupInfo: `It's a system group, you cannot edit it`,
      checkInQuestion: 'Check in question',
      checkInQuestionInfo: `It's a system question, you cannot edit it`,
      checkInsGroup: 'Check-ins Group',
      checkInsQuestionList: 'Check-in Question List',
      checkInsQuestionListInfo:
        'These are the questions attached to the project, which you can modify, add to, or delete.',
      deleteCheckInItemHeading: 'Delete check-in {{ checkInItem }} from this project',
      deleteOwnedCheckInQuestionInfo: 'It still will be accessible from your library.',
      deleteNotOwnedCheckInItemInfo:
        'Are you sure you want to delete check-in {{ checkInItem }} from this project?',
      editOwnedCheckInQuestionInfo: 'Edit will affect all usage of the check-in.',
      editNotOwnedCheckInQuestionInfo:
        'This check-in question does not belong to you, by deleting it you will lose access to it. You will have to reproduce it in your library.',
      editNotOwnedCheckInGroupInfo:
        'This check-in group does not belong to you, by deleting it you will lose access to it.',
    },
    definedCareersConnections: 'Defined Careers - Connections',
    definedCareersInfo:
      'The following careers closely align with this project. Interested students are encouraged to explore and experience these careers on the Defined Careers platform.',
    emptyState: {
      addCheckInQuestion:
        'Fill check-in tab by creating new one or add existing from your library.',
      createCheckInQuestion: 'Create check-in question to be used in projects.',
      noCheckInQuestions: 'There are no check-in questions',
      noProducts: 'There are no products',
      noResources: 'There are no teacher or student resources',
      noStandards: 'There are no standards',
    },
    filesHeading: 'Files associated with this task:',
    filesDownloads: 'Worksheets',
    fileAttachedSucessfully_one: '{{count}} file attached sucessfully',
    fileAttachedSucessfully_other: '{{count}} files attached sucessfully',
    fileDeletedSucessfully: 'File deleted sucessfully',
    supportedFileFormats:
      'Supported file formats are: pdf, doc, docs, xls, xlsx, csv, txt, rtf, html, zip, mp3 .wma, mpg, flv, avi,' +
      ' jpg, jpeg, png, gif, mp4, ppt, pptx, webm',
    introduction: 'Introduction',
    missingPresentation: 'No presentation found',
    overview: 'Overview',
    products: 'Products',
    quickProject: 'Quick Project',
    resources: 'Resources',
    rubric: {
      grade: 'Grade ({{ count }})',
    },
    rubrics: 'Rubrics',
    showLess: 'Show less',
    showMore: 'Show more',
    standard: {
      header: 'Select the standard set below to view aligned standards.',
      empty: 'No standards to display',
    },
    standards: 'Standards',
    studentResources: 'Student Resources',
    submission: {
      uploadError: 'There was an error while uploading the file',
    },
    units: 'In Units',
    viewDetails: 'View details',
    viewQuickProject: 'View Quick Project',
    careersConnections: {
      onetImgAlt: 'O*NET in-it',
      onetFooterTitle:
        'This site incorporates information from O*NET Web Services. Click to learn more.',
      onetFooterLink: `This site incorporates information from O*NET Web Servicesby the U.S. Department of Labor, Employment and Training Administration (USDOL/ETA). O*NET{{symbol}}; is of USDOL/ETA.`,
    },
    notFound: 'Project not found',
    notFoundText: "Unfortunately, we couldn't find the project you were looking for.",
  },
  teams: {
    team: 'Team',
    teams: 'Teams',

    teamName: 'Team name',
    teamWithName: 'Team: {{ name }}',
    teamNameLabel: 'Team: <primaryText>{{ name }}</primaryText>',
    teamProjectInfo: 'This is a team project',
    noDataTitle: 'Teams section is empty',
    noDataDescription: 'This class has no associated teams.',
    createANewTeam: 'Create a new team',
    createATeam: 'Create a team',
    createNewTeam: 'Create new team',
    createTeam: 'Create Team',
    assignProject: 'Assign project',
    members: '{{count}} members',
    searchByName: 'Search by name',
    typeNameHere: 'Type name here...',
    addTeamMembers: 'Add team members',
    addAndSave: 'Add & save',
    deleteTeamConfirmation: 'Are you sure you want to delete {{name}}?',
    validation: {
      createWithMinTwoStudents: 'To create a team, select at least two students.',
      editWithMinTwoStudents: 'To edit a team, select at least two students.',
      createError: 'An error occured while creating the team',
      updateError: 'An error occured while updating the team',
      deleteError: 'An error occured while deleting the team',
    },
  },
  user: {
    course: {
      readMore: 'Read More',
      viewProject: 'View Project',
      unitOutline: {
        heading: 'Unit Outline',
        noUnits: 'No units found',
      },
    },
    dashboard: {
      activityLog: {
        CHECK_IN_QUESTION_ANSWER_SUBMITTED: ' answered the check-in question for ',
        CHECK_IN_QUESTION_ANSWER: ' answered the check-in question in ',
        PRODUCT_SUBMISSION: ' submitted a product for ',
        PRODUCT_SUBMISSION_SUBMITTED: ' submitted a product for ',
        STUDENT_ADDED: ' was added to ',
        STUDENT_REMOVED: ' was removed from ',
        USER_ADDED: ' was added to your active classes ',
        USER_REMOVED: ' was removed from your active classes ',
        teamContext: ' as part of team: ',
      },
      tables: {
        actions: 'Actions',
        admin: 'Admin',
        classes: 'Classes',
        emptyEntities: 'There are no entities.',
        emptyUsers: 'There are no users.',
        entityName: 'Entity Name',
        entities: 'Entities',
        generateReport: 'Generate Report',
        name: 'Name',
        role: 'Role',
        seeClasses: 'See Classes',
        teacher: 'Teacher',
        teachers: 'Teachers',
        students: 'Students',
        users: 'Users',
      },
      classes: {
        needsReview: 'Needs review',
      },
      allCourses: 'All Courses',
      courses_one: 'Course',
      courses_other: 'Courses',
      gradesRange: 'Grades: {{gradesRange}}',
      heading: 'Course Library',
      projects_one: 'Project',
      projects_other: 'Projects',
      showMore: 'Show more',
      view: 'View',
      viewCourse: 'View Course',
      viewProject: 'View Project',
      welcome: 'Welcome {{userName}}!',
      welcomeMessage:
        'For help with Defined Learning, please go to the <1>Knowledge Base</1>, our support page that features resources and quick tutorial videos.',
      projectsCount: 'Projects: {{tasksCount}}',
      countProjects: '{{tasksCount}} Projects',
      countCourses: '{{coursesCount}} Courses',
    },
    standardSearch: {
      search: 'Search by Standard',
      title: 'Search by Standard',
      result: '{{count}} Result found',
      result_other: '{{count}} Results found',
      info: 'If a standard is not shown, there are currently no projects that align to that standard.',
      firstCardSet: {
        mainTitle: '1. Select your standard set',
        errorSubtitle: 'There is no standard sets',
        errorText: "Unfortunately, you don't have any standard sets to search by.",
      },
      secondCardSet: {
        mainTitle: '2. Select your subject and grade',
        errorSubtitle: 'No standards found',
        errorText: 'Go back to the previous step and use other filters',
      },
      thirdCardSet: {
        mainTitle: '3. Select your standard',
        errorSubtitle: 'No standards found',
        errorText: 'Go back to the previous step and use other filters',
      },
      fourthCardSet: {
        errorSubtitle: 'No Projects found',
        errorText: 'Go back to the previous step and use other filters',
      },
      subject: 'Subject',
      grade: 'Grade',
      standard: 'Standard',
      next: 'Next',
      cancel: 'Cancel',
      previous: 'Previous',
      back: 'Back to search',
      backToDashboard: 'Back to dashboard',
    },
    grading: {
      answer: 'Answer',
      answerNotSubmitted: 'Answer not submitted',
      CHECK_IN_QUESTION_HEADER: 'Check-in: {{name}}',
      didNotSubmit: 'Did not submit',
      edit: 'Edit Grade',
      error: 'There was an error while grading',
      files: 'Files',
      filesUpload: 'Upload new files',
      lastSubmittedOn: 'Last submitted on {{date}}',
      leaveFeedback: 'Leave feedback for the student',
      nextStudent: 'Next Student',
      notGraded: 'Not graded',
      nothingToGrade: 'No items to grade.',
      notSubmitted: 'Not submitted',
      PRODUCT_HEADER: 'Product: {{name}}',
      previousStudent: 'Previous Student',
      productGraded: 'This product has been graded',
      score: 'Score',
      sidebar: {
        header: 'Assigned Teams and Students',
        otherStudents: 'Other Students',
        WAITING_FOR_GRADING: 'NEEDS REVIEW ({{count}})',
        NOT_YET_SUBMITTED: 'NOT SUBMITTED ({{count}})',
        ALREADY_GRADED: 'GRADED ({{count}})',
        team: 'This is a team submission',
      },
      status: 'Status',
      statuses: {
        ACCEPTED: 'Graded',
        NOT_ACCEPTED: 'Rejected',
      },
      statusBy: ' by {{name}}',
      atDate: ' at {{date}}',
      success: 'Successfully graded',
      submittedOn: 'Submitted on {{date}}',
    },
    navigation: {
      adminDashboard: 'Admin Dashboard',
      dashboard: 'Dashboard',
      home: 'Home',
      reports: 'Goals & Reports',
      myClasses: 'My Classes',
      myProjects: 'My Projects',
      featured: 'Featured',
    },
    myProjects: {
      active: 'ACTIVE',
      activityHeader: 'Latest Project Activity',
      archiveMessage: 'Do you really wish to archive {{projectName}}?',
      archiveMessageInfo: 'The project will also be removed from student dashboards.',
      archiveTitle: 'Archive Project',
      archived: 'ARCHIVED',
      archivedProjects: 'Archived Projects',
      assignedDate: 'Assigned Date',
      assignedProjects: 'Assigned Projects',
      createdOn: 'Created On',
      customizedDate: 'Customized Date',
      customizedProjects: 'Customized Projects',
      lastAssigned: 'Last assigned',
      myProjects: 'My Projects',
      newProject: 'New Project',
      newProjectTitle: 'Create New Project',
      createProject: 'Create Project',
      newProjectDescription: 'Set project name',
      needsReview: 'Needs Review',
      otherTeacherTooltip: 'Assigned by other teacher',
      projectName: 'Project Name',
      projects: 'Projects',
      reportAreaHeader: 'Report Area',
      status: 'Status',
      toastMessage: '{{projectName}} has been {{newStatus}}.',
      unarchiveMessage: 'Do you really wish to unarchive {{projectName}}?',
      unarchiveTitle: 'Unarchive Project',
      viewProject: 'View Project',
      createNewProject: 'Create new',
    },
    myClasses: {
      activityHeader: 'Latest Classes Activity',
      myClasses: 'My Classes',
      teacherClasses: '{{name}} Classes',
      entityClassName: 'Entity & Class Name',
      activeProjects: 'Active Projects',
      goToClass: 'Go to Class',
      students: {
        label: 'Students',
        projects_one: '{{count}} Project',
        projects_other: '{{count}} Projects',
        viewStudent: 'View Student',
        loginAs: 'Login As',
        viewPortfolio: 'View Portfolio',
      },
      teams: {
        header: 'Teams',
      },
    },
    schoolClass: {
      activityHeader: 'Latest Class Activity',
    },
    library: {
      checkins: {
        question: 'Question',
        description: 'Create check-in question to be used in projects.',
        emptyLibrary: 'There is no check-in questions',
        actions: {
          createNew: 'Create new',
          goBack: 'Go back',
        },
        archive: {
          header: 'Archive Check-in',
          body: 'Do you really wish to archive {{name}}?',
          success: 'Check-in question archived successfully',
          failure: 'Check-in question could not be archived',
        },
        create: {
          header: 'Create new Check-in',
          error: 'An error occurred when creating check-in question',
          label: 'Check in question',
          success: 'Check-in question created successfully',
        },
        details: {
          assignedIn: 'Assigned in',
          header: 'Check-in details',
          noProjects: 'No projects assigned',
          question: 'Check In Question',
          questionInfo: 'Edit will affect all usage of the check-in.',
          questionError: 'An error occurred when updating check-in question',
        },
        main: {
          header: 'Check-in Questions',
        },
      },
    },
    project: {
      assignment: {
        empty: {
          assigned: 'No assigned students or teams found',
          result: 'No matches found in {{emptyTab}} tab take a look at {{suggestedTab}} tab.',
          default: 'No students found',
          back: 'Back to all results',
          teams: "You don't have any teams.",
          noTeamsInClass: 'There are no teams in your class.',
        },
        error: 'Encountered an error while assigning',
        header: 'Assign/Unassign {{ taskName }}',
        search: 'Search by Student/Class name...',
        success: 'Assignment successful',
        students: 'students',
        teams: 'teams',
        tabs: {
          assigned: 'Assigned',
          classes: 'Classes',
          teams: 'Teams',
        },
      },
      browse: 'Browse copies',
      copies: {
        description: 'Move to a specific copy that interested you by clicking on it?',
        header: '{{displayName}} copies',
      },
      catalog: 'Catalog',
      checkins: {
        assignCheckin: {
          heading: 'Adding check-in questions to project',
          listHeading: 'Check-in questions',
          submitButton: 'Add to project',
        },
        noItems: 'No items to grade.',
        gradeButton: 'Grade ({{count}})',
      },
      classroomButton: 'Google Classroom',
      copy: 'Copy',
      customize: {
        button: 'Customize Project',
        description:
          'To customize a project a copy needs to be created. Your customized projects are available in the "My Projects" section. To begin, please name your copy below.',
        header: 'Create a duplicate of {{ displayName }}',
        missingCopies: 'Customize a project first to view available copies',
        cannotBeCopied: "This task is in draft state, so it can't be copied",
        placeholder: '#task.name+"Copy"+date(now(),mm/dd/yyyy)',
        start: 'Begin customization',
        presentation: {
          addPresentation: 'Add Presentation',
          createPresentation: 'Create Presentation',
          draftState: 'This presentation is in draft state',
          editableDescription: 'Go to builder to edit this presentation.',
          editableTitle: 'Edit presentation',
          goToBuilder: 'Go to builder',
          missingPresentationHeader: 'There is no presentation here!',
          missingPresentationText:
            'Add a presentation from the admin panel, or create a new presentation.',
          uneditableTitle: "You can't edit this presentation",
          uneditableDescription:
            'This is external presentation. You can replace it by creating new one in presentation builder.',
          uneditableButtonText: 'Create new',
        },
      },
      description: 'Description',
      grade: 'Grade',
      notFound: 'The project that was shared with you has not been published yet.',
      projectHasBeenArchived: 'This project has been archived',
      notFoundText:
        'Please notify the person who shared this project with you that they should publish the project.',
      products: {
        alignedStatements: 'There are aligned statements in the product rubric',
        previewRubric: 'Preview the product rubric',
      },
      grading: {
        heading: 'ITEMS AVAILABLE TO GRADE',
        checkins: 'Check-ins: ',
        products: 'Products: ',
      },
      settings: {
        addNewProduct: 'Add New Product',
        addProduct: 'Add product',
        convert: 'Convert to draft',
        enable: 'Enable editing',
        label: 'Project Settings',
        newCopy: 'Create a new copy',
        publish: 'Publish',
        status: 'Project status:',
        productsText:
          'Click the "Add product" button to add a new product to this project. After saving, edit the blank rubric to assess your desired criteria.',
      },
      share: {
        allowTooltip:
          'Student Logins allow students to be automatically assigned to your project after login. A login button will appear when opening the share link.',
        assign: 'Assign students directly',
        assignNotAllowedTooltip: 'Publish your project first to assign students',
        allowStudentLogins: 'Allow student logins',
        createLink: 'Create share link',
        header: 'Share / Assign',
        shareTooltip:
          'This allows you to create a share link to utilize on any LMS, Webpage, or Social Media platform',
      },
      shareTooltip: 'Link copied to the clipboard!',
      teachingResources: 'Teaching Resources',
    },
    projectSearch: {
      emptyList: 'No matching projects found for',
      readMore: 'View',
      refinementsPanel: {
        clearAll: 'Clear All',
        courses: 'Courses',
        grades: 'Grades',
        header: 'Refine your search',
        subjects: 'Subjects',
        units: 'Units',
      },
    },
    report: {
      modal: {
        assessment: 'Assessment Report',
        assessmentKicker: 'ASSESSMENT',
        courses: 'Courses Report',
        coursesKicker: 'COURSES',
        entityDescription:
          'Select which report do you want to generate. Report will be based on selected classes of selected entity.',
        header: 'Generate Report',
        plansKicker: 'PLANS',
        schoolClassDescription:
          'Select which report do you want to generate. Report will be based on selected class.',
        selfDescription:
          'Select which report do you want to generate. Report will be based on your classes.',
        submit: 'Generate',
        userDescription:
          'Select which report do you want to generate. Report will be based on classes of selected user.',
      },
    },
    signIn: {
      back: 'Back',
      classLink: 'ClassLink',
      classLinkText: 'Login with ClassLink',
      clever: 'Clever',
      cleverText: 'Login with Clever',
      form: {
        credentialsError: 'Incorrect login or password',
        loginLabel: 'Login',
        passwordLabel: 'Password',
        submit: 'Login',
        usernameLabel: 'Username',
      },
      google: 'Google',
      googleText: 'Login with Google',
      heading: 'Sign in to your account',
      help: {
        link: 'Get Help',
        text: 'Having Trouble?',
      },
      register: {
        link: 'Register here',
        text: 'You have access code?',
      },
    },
    signInWithAccessCode: {
      heading: 'If you were given an access code to register please enter it below.',
      form: {
        accessLabel: 'Access Code',
        submit: 'Login',
      },
      trial: {
        link: 'clicking here.',
        text: 'You can request a free trial to Defined Learning by',
      },
    },
    classList: {
      needsReview: 'Needs review',
    },
    ltiSearch: {
      products: 'Products',
      projects: 'Projects',
      productSelect: 'Select a product below:',
    },
  },
  student: {
    navigation: {
      dashboard: 'Dashboard',
      portfolio: 'Portfolio',
      plans: 'Plans',
    },
    dashboard: {
      assignedProjects: {
        assignedBy: 'Assigned by {{name}}',
        assignedOn: 'Assigned on {{date}}',
        description: 'Projects assigned to you by your teacher',
        label: 'Assigned Projects',
        noProjects: "You're not assigned to any projects",
        selfAssigned: 'Self Assigned',
        teamProjects: 'This is a team project',
        viewProject: 'View',
      },
      myClasses: {
        label: 'My Classes',
      },
      portfolio: {
        button: 'Go to portfolio',
        description:
          'Add projects, achievements, and other resources to build a future ready portfolio to share.',
        heading: 'Portfolio',
        label: 'Build your personal portfolio',
      },
    },
    project: {
      submissions: {
        archive: {
          error: 'An error occured while archiving file',
          success: 'Successfuly archived file',
        },
        viewGrading: 'View grading',
        status: {
          default: 'Not Submitted',
          error: 'An error occured while submitting',
        },
        upload: {
          error: 'An error occured while uploading file',
        },
      },
    },
    signIn: {
      back: 'Back',
      classLink: 'ClassLink',
      classLinkText: 'Login with ClassLink',
      clever: 'Clever',
      cleverText: 'Login with Clever',
      dividerText: 'Or',
      form: {
        domainLabel: 'Domain / Site Code',
        loginLabel: 'Login',
        usernameLabel: 'Username',
        passwordLabel: 'Password',
        submit: 'Login',
        credentialsError: 'Incorrect login, password or domain',
      },
      google: 'Google',
      googleText: 'Login with Google',
      heading: 'Sign in to your account',
      help: {
        link: 'Get Help',
        text: 'Having Trouble?',
      },
      register: {
        link: 'Register here',
        text: 'You have access code?',
      },
    },
  },
  admin: {
    tasks: {
      presentation: {
        addLink: 'Add link',
        addNewSlide: 'Add new slide',
        addScript: 'Add script',
        addSlide: 'Add slide',
        addSubSlide: 'Add sub-slide',
        addToLibrary: 'Add to library',
        allChangesSaved: 'All changes saved',
        backgroundStyle: 'Background Style',
        back: 'Back',
        backToProject: 'Back to project',
        backToPresentationBuilder: 'Back to presentation builder',
        backToSlidesLibrary: 'Back to slides library',
        buttonLinkLabel: 'Button text',
        center: 'Center',
        topRight: 'Top right corner',
        topLeft: 'Top left corner',
        bottomRight: 'Bottom right corner',
        bottomLeft: 'Bottom left corner',
        clear: 'Clear',
        contain: 'Contain',
        createPresentation: 'Create presentation',
        createSubslide: 'Create a subslide.',
        delete: 'Delete',
        deleteHeader: 'You are about to delete the shared slide',
        deleteText:
          'Removing a shared slide will remove that slide from all presentations where it was used. Are you sure you want to delete the shared slide?',
        descriptionLabel: 'Presentation Description',
        position: 'Position',
        draft: 'Draft',
        duplicate: 'Duplicate',
        editDisabledHeader: "You can't edit this shared slide.",
        editDisabledInfo:
          'This slide belongs to someone else, to be able to edit a shared slide you need to be their owner.',
        elements: 'Elements',
        exportPdf: 'Export PDF',
        fill: 'Fill',
        fontDescription: 'Description',
        fontTitle: 'Title',
        presentationType: 'Presentation Type',
        classicPresentation: 'Classic',
        fullScreenPresentation: 'Full screen',
        hide: 'Hide',
        iframeLabel: 'Iframe',
        iframeUrlLabel: 'Paste iframe URL',
        imageLabel: 'Image',
        imagePositionLabel: 'Position',
        imageStyleLabel: 'Style',
        label: 'Presentation Url',
        left: 'left',
        linkLabel: 'Link {{number}}',
        linkToSlideLabel: 'Link to slide',
        nameLabel: 'Presentation Name',
        noFitMessage: 'The text does not fit and may not be displayed correctly',
        noSlideInCurrentPresentation: 'No slides in current presentation',
        noSlideInSlideLibrary: 'No slides in the library',
        notes: 'Notes',
        notesPlaceholder: 'Enter notes here...',
        onlyMainInfo: 'Only the main slide will be added, without subslides',
        openInLibrary: 'Open in library',
        presentationBuilder: 'Presentation Builder',
        presentationCreated: 'Presentation created',
        presentationSettings: 'Presentation Settings',
        presentationStatus: 'Presentation Status',
        preview: 'Preview',
        publish: 'Publish',
        replace: 'Replace',
        right: 'Right',
        savingChanges: 'Saving changes',
        pendingChanges: 'Pending changes',
        scriptLabel: 'Script',
        sharedEditInfoSysAdmin:
          'Changes in shared slide will affect all copies in all presentations',
        sharedEditInfo:
          'Click "Remove" to delete the slide and press the "Add slide" button to replace the slide with one of your own',
        sharedModalSysAdminTitle: 'Changes in shared slide are global',
        sharedModalTitle: 'Changes are not allowed for Shared Slides',
        sharedSlide: 'Shared Slide',
        slideInUse: 'Slide has already been added to the presentation',
        slideLibrary: 'Slides Library',
        slideName: 'Slide Name',
        slideSettings: 'Slide Settings',
        slidesLibrary: 'Slides Library',
        slideTemplates: 'Slide templates',
        typography: 'Typography',
        uploadImage: 'Upload image',
        videoLabel: 'Video',
        videoUrlLabel: 'Paste video URL',
        library: 'Slides library',
        templates: 'Slides templates',
        otherSlides: 'Other slides',
        quickProjects: 'Quick projects',
      },
    },
    entities: {
      settings: {
        applyForChildren: 'Apply change also for children entities',
      },
    },
  },
  shared: {
    dataLoader: {
      error: 'There was an error during data loading',
    },
    paginatedLoader: {
      prev: 'Previous',
      next: 'Next',
    },
    filterProvider: {
      typeInfo: 'Type at least {{number}} character.',
    },
  },
};
